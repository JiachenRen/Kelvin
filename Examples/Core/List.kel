def l1 = {1, 2, 3, 4, 5}

# Append
def l2 = (l1 ++ {6, 7, 8, 9, 10})
l2 === map(1...10) {$1 + 1}

# Map
def l3 = (l2 | $0 + $1)
l3 === map(l2) {$0 + $1}

# Filter
def l4 = (l1 |? $0 % 2 == 0)

# Sort
def l5 = (l1 >? $0 > $1)

# Reduce
n := (l2 ~ $0 + $1 ^ 2)

# Remove
l1 := (l1 remove 3)

# Subscript by range
l6 := l1[1,3]
l6 === {2, 3, 5}

# Reverse
print(l1)
reverse(l1) === {5, 3, 2, 1}

# Produces "gip a ma I"
reverse("I am a pig" as @list) ~ $0 & $1

# Mutating a list at index
(set 3 of {2, 3, 7, 9} to "pig") === {2, 3, 7, "pig"}

# Removing element at index
({1, 2, 3, 4} remove 2) === {1, 2, 4}

# Removing all matching elements
removeAll({a, x, 3, 4}) {$0 is @variable} === {3, 4}

# Insertion
l := [1, 2, 3, 5]
l := (insert x at 2 of l)
l === [1, 2, x, 3, 5]

# Set element at index
l := (set 3 of l to q^2)
l === [1, 2, x, q^2, 5]

# Swap indices i and j of list
(swap {0, 1} of {a, b, c}) === {b, a, c}
