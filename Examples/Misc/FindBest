iq_scale := 180
look_scale := 100

def iq() = random() * iq_scale
def look() = random() * look_scale

# Convert looks and iq to a score out of 100
def score() = round (look() + iq() -> $0 / (iq_scale + look_scale) * 100)


# Define a function gen(x) that generate scores for x people
def gen(x) = score()...x

# Generate two groups of people, each group w/ 5 individuals
def groups = gen(5)...2

# Declare a matrix of names
def names = {{"Henry", "Bob", "George", "Ann", "Marcus"}, {"Ms. Chen", "Bobibuha", "Tadalamaya", "Kabooma", "Delta"}}

# Associate names with scores
l1 := (names::0 | ($0 : groups::0::$1))
l2 := (names::1 | ($0 : groups::1::$1))

println "Group 1: "
println l1
println "Group 2: "
println l2


def find_best_in(group) = (best_person := ("" : 0); group | $0::1 > best_person::1 ? (best_person := $0) : _ ; best_person)

print "Best in group 1: "
println find_best_in(l1)
print "Best in group 2: "
println find_best_in(l2)
